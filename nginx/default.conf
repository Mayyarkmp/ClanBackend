events {}

http {
    upstream django {
        server server:8000;
    }

    upstream channels {
        server daphne:8001;
    }

    upstream dashboard {
        server dashboard:3000;
    }
     upstream site {
        server site:3000;
    }

    server {
        listen 443 ssl;
        server_name backend.clan.sa;

        # إضافة الموقع للتحقق من الشهادة عبر webroot
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        ssl_certificate /etc/nginx/ssl/live/clan.sa/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/clan.sa/privkey.pem;

        location / {
            proxy_pass http://django;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # مؤقتاً قم بتعطيل هذا السطر إذا كنت تواجه مشكلة إعادة توجيه غير منتهية
            # proxy_set_header X-Forwarded-Proto $scheme;
        }

        # إعدادات WebSocket لتطبيق Channels
        location /ws/ {
            proxy_pass http://channels;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 60m;
            proxy_send_timeout 60m;
        }

        # إعدادات ضغط الملفات
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_vary on;

        client_max_body_size 50M;
    }
    server {
        listen 80;
        server_name clan.sa backend.clan.sa dashboard.clan.sa;

        # إعادة توجيه جميع الطلبات إلى HTTPS
        return 301 https://$host$request_uri;
    }


    server {
        listen 443 ssl;
        server_name dashboard.clan.sa;

        ssl_certificate /etc/nginx/ssl/live/clan.sa/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/clan.sa/privkey.pem;

        # إضافة الموقع للتحقق من الشهادة عبر webroot
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            proxy_pass http://dashboard;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # مؤقتاً قم بتعطيل هذا السطر إذا كنت تواجه مشكلة إعادة توجيه غير منتهية
            # proxy_set_header X-Forwarded-Proto $scheme; docker compose run certbot certonly --webroot --webroot-path=/var/www/certbot -d backend.clan.sa -d clan.sa -d dashboard.clan.sa
        }

        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_vary on;

        client_max_body_size 50M;
    }


    server {
        listen 443 ssl;
        server_name clan.sa;

        ssl_certificate /etc/nginx/ssl/live/clan.sa/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/clan.sa/privkey.pem;

        # إضافة الموقع للتحقق من الشهادة عبر webroot
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            proxy_pass http://site;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # مؤقتاً قم بتعطيل هذا السطر إذا كنت تواجه مشكلة إعادة توجيه غير منتهية
            # proxy_set_header X-Forwarded-Proto $scheme; docker compose run certbot certonly --webroot --webroot-path=/var/www/certbot -d backend.clan.sa -d clan.sa -d dashboard.clan.sa
        }

        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_vary on;

        client_max_body_size 50M;
    }
}
